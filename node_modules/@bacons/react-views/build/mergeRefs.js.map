{"version":3,"file":"mergeRefs.js","sourceRoot":"","sources":["../src/mergeRefs.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,6CAA+B;AAE/B,SAAgB,SAAS,CACvB,GAAG,IAAsC;IAEzC,OAAO,SAAS,UAAU,CAAC,IAAwB;QACjD,IAAI,CAAC,OAAO,CAAC,CAAC,GAA0B,EAAE,EAAE;YAC1C,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,OAAO;aACR;YACD,IAAI,OAAO,GAAG,KAAK,UAAU,EAAE;gBAC7B,GAAG,CAAC,IAAI,CAAC,CAAC;gBACV,OAAO;aACR;YACD,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;gBAC3B,mBAAmB;gBACnB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;gBACnB,OAAO;aACR;YACD,OAAO,CAAC,KAAK,CACX,gFAAgF,MAAM,CACpF,GAAG,CACJ,EAAE,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAxBD,8BAwBC;AAED,SAAgB,YAAY,CAC1B,GAAG,IAAsC;IAEzC,OAAO,KAAK,CAAC,OAAO,CAClB,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;IACxB,2BAA2B;IAC3B,CAAC,GAAG,IAAI,CAAC,CACV,CAAC;AACJ,CAAC;AARD,oCAQC","sourcesContent":["/**\n *\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport * as React from \"react\";\n\nexport function mergeRefs(\n  ...args: readonly React.ElementRef<any>[]\n): (node: HTMLElement | null) => void {\n  return function forwardRef(node: HTMLElement | null) {\n    args.forEach((ref: React.ElementRef<any>) => {\n      if (ref == null) {\n        return;\n      }\n      if (typeof ref === \"function\") {\n        ref(node);\n        return;\n      }\n      if (typeof ref === \"object\") {\n        // @ts-expect-error\n        ref.current = node;\n        return;\n      }\n      console.error(\n        `mergeRefs cannot handle Refs of type boolean, number or string, received ref ${String(\n          ref\n        )}`\n      );\n    });\n  };\n}\n\nexport function useMergeRefs(\n  ...args: readonly React.ElementRef<any>[]\n): (node: HTMLElement | null) => void {\n  return React.useMemo(\n    () => mergeRefs(...args),\n    // eslint-disable-next-line\n    [...args]\n  );\n}\n"]}