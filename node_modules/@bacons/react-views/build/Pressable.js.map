{"version":3,"file":"Pressable.js","sourceRoot":"","sources":["../src/Pressable.tsx"],"names":[],"mappings":";;;AACA,+CAIsB;AAmCT,QAAA,SAAS,GAAG,wBAAgD,CAAC","sourcesContent":["import { ClassAttributes, ComponentProps, ComponentType } from \"react\";\nimport {\n    Pressable as NativePressable,\n    StyleProp,\n    PressableStateCallbackType as NativePressableStateCallbackType,\n} from \"react-native\";\nimport { ViewStyle } from \"./View\";\n\ntype NativePressableProps = ComponentProps<typeof NativePressable> &\n    ClassAttributes<typeof NativePressable>;\n\nexport type PressableStateCallbackType = NativePressableStateCallbackType & {\n    readonly pressed: boolean;\n    /** @platform web */\n    readonly hovered: boolean;\n    /** @platform web */\n    readonly focused: boolean;\n};\n\nexport type WebPressableProps = {\n    /**\n     * Either children or a render prop that receives a boolean reflecting whether\n     * the component is currently pressed.\n     */\n    children?:\n    | React.ReactNode\n    | ((state: PressableStateCallbackType) => React.ReactNode);\n\n    /**\n     * Either view styles or a function that receives a boolean reflecting whether\n     * the component is currently pressed and returns view styles.\n     */\n    style?:\n    | StyleProp<ViewStyle>\n    | ((state: PressableStateCallbackType) => StyleProp<ViewStyle>);\n};\n\nexport type PressableProps = Omit<NativePressableProps, \"children\" | \"style\"> &\n    WebPressableProps;\n\nexport const Pressable = NativePressable as ComponentType<PressableProps>;\n"]}